package euler;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.List;

public class SummationOfPrimes {

    private static List<Integer> primeNumbers = new ArrayList<>();

    public static final int NO = 2000000;

    public static void main(String[] args) {
        BigInteger bigInteger = new BigInteger("0");
        long start = System.currentTimeMillis();
        for (int i = 0; i < NO; i++) {
            if (isPrime(i)) {
                primeNumbers.add(i);
                bigInteger = bigInteger.add(BigInteger.valueOf(i));
            }
        }
        long stop = System.currentTimeMillis();
        System.out.println("Time: " + (stop - start));
        System.out.println(bigInteger);

    }

    static boolean isPrime(int number) {
        if (number == 0 || number == 1) {
            return false;
        }
        else if (number == 2 || number == 3 || number == 5) {
            return true;
        }
        else if (number % 2 == 0) {
            return false;
        }
        else if (number % 3 == 0) {
            return false;
        } else if (number % 5 == 0) {
            return false;
        } else {
            for (Integer i :
                    primeNumbers) {
                if (number % i == 0) {
                    return false;
                }
            }
        }
        return true;
    }

}
